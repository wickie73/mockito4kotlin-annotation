buildscript {

    ext {
        java_version = '8'
        kotlin_version = '1.4.21-2'
        kotlin_coroutines_version = '1.4.2'
        junit5_version = '5.7.0'
        mockito_version = '2.28.2'
        mockito_kotlin_version = '2.2.11'
        assertj_version = '3.18.1'
        dokka_version = '1.4.30'
        nexus_publish_version = '1.0.0'
        gradle_version = '6.8.1'
        encoding = 'UTF-8'
    }

    repositories {
        mavenCentral()
    }

}

plugins {
    id 'org.jetbrains.kotlin.jvm' version "$kotlin_version"
    id 'maven-publish'
    id 'signing'
    id "io.github.gradle-nexus.publish-plugin" version "$nexus_publish_version"
    id "org.jetbrains.dokka" version "$dokka_version"
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    compile "org.mockito:mockito-core:$mockito_version"
    compile "org.mockito.kotlin:mockito-kotlin:$mockito_kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:$kotlin_coroutines_version"
    testCompile "org.junit.jupiter:junit-jupiter-api:$junit5_version"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit5:$kotlin_version"
    testCompile "org.assertj:assertj-core:$assertj_version"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:$junit5_version"
}

compileKotlin {
    kotlinOptions.freeCompilerArgs += ["-XXLanguage:+InlineClasses"]
}

test {
    useJUnitPlatform ()
}

apply from: 'publish.gradle'
